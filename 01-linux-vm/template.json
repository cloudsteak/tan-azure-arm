{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "prefix": {
            "type": "string",
            "metadata": {
                "description": "Prefix"
            }
        },
        "number": {
            "type": "int",
            "allowedValues": [
                1,
                2,
                3,
                4,
                5
            ],
            "metadata": {
                "description": "Mennyi viruálisgépet hozzunk létre"
            }
        },
        "virtualMachineSize": {
            "allowedValues": [
                "Standard_B1ls",
                "Standard_B1s"
            ],
            "type": "string"
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "rendszergazda"
        },
        "adminPassword": {
            "type": "secureString"
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "vnetId": "/subscriptions/3a1ff985-e6aa-44a8-ad61-a6827fa6f92a/resourceGroups/mentorklub2023/providers/Microsoft.Network/virtualNetworks/mentor-net",
        "vnetName": "[last(split(variables('vnetId'), '/'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', 'frontend')]"
    },
    "resources": [
        {
            "copy": {
                "name": "nicCopy",
                "count": "[parameters('number')]"
            },
            "name": "[concat(parameters('prefix'), '-nic-', copyIndex())]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-11-01",
            "location": "[variables('location')]",
            "tags": {
                "Component": "NIC",
                "VM": "[concat(parameters('prefix'), '-vm-', copyIndex())]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('prefix'), '-nsg'))]",
                "[resourceId('Microsoft.Network/publicIpAddresses', concat(parameters('prefix'), '-pip-', copyIndex()))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', concat(parameters('prefix'), '-pip-', copyIndex()))]",
                                "properties": {
                                    "deleteOption": "Delete"
                                }
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', concat(parameters('prefix'), '-nsg'))]"
                }
            }
        },
        {
            "name": "[concat(parameters('prefix'), '-nsg')]",
            "tags": {
                "Component": "NSG"
            },
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "priority": 300,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    },
                    {
                        "name": "HTTP",
                        "properties": {
                            "priority": 320,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "80"
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('prefix'), '-pip-', copyIndex())]",
            "tags": {
                "Component": "PublicIP",
                "VM": "[concat(parameters('prefix'), '-vm-', copyIndex())]"
            },
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-08-01",
            "copy": {
                "name": "pipCopy",
                "count": "[parameters('number')]"
            },
            "location": "[variables('location')]",
            "properties": {
                "publicIpAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard"
            }
        },
        {
            "name": "[concat(parameters('prefix'), '-vm-', copyIndex())]",
            "tags": {
                "Component": "VM",
                "VM": "[concat(parameters('prefix'), '-vm-', copyIndex())]"
            },
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-03-01",
            "copy": {
                "name": "vmCopy",
                "count": "[parameters('number')]"
            },
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('prefix'), '-nic-', copyIndex())]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        },
                        "diskSizeGB": 30,
                        "deleteOption": "Delete",
                        "name": "[concat(parameters('prefix'), '-vm-', copyIndex(),'-OsDisk')]"
                    },
                    "imageReference": {
                        "publisher": "canonical",
                        "offer": "0001-com-ubuntu-server-jammy",
                        "sku": "22_04-lts-gen2",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('prefix'), '-nic-', copyIndex()))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[concat(parameters('prefix'), '-vm-', copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "patchSettings": {
                            "patchMode": "ImageDefault"
                        }
                    }
                },
                "securityProfile": {
                    "securityType": "TrustedLaunch",
                    "uefiSettings": {
                        "secureBootEnabled": true,
                        "vTpmEnabled": true
                    }
                }
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}